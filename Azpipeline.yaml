variables:
  BuildParameters.container: 'hamada'
  BuildParameters.addPipelineData: true
  BuildParameters.addBaseImageData: true
  imageName: 'myapp'
  imageTag: '$(Build.BuildId)'  # Use build ID as the image tag for uniqueness
  fullImageName: '$(imageName):$(imageTag)'

trigger:
  branches:
    include:
    - refs/heads/main

name: $(date:yyyyMMdd)$(rev:.r)

resources:
  repositories:
  - repository: self
    type: git
    ref: refs/heads/main

jobs:
- job: Job_1
  displayName: Agent job 1
  pool:
    name: Default
  steps:
  - checkout: self
    clean: true
    fetchTags: false

  - task: Docker@2
    displayName: Build and Push an image
    inputs:
      containerRegistry: '139f9c5c-cd33-4df3-baf9-e41824683734'
      repository: '$(imageName)'
      command: 'buildAndPush'
      Dockerfile: '**/Dockerfile'
      tags: '$(imageTag)'

- job: Job_2
  displayName: Run
  pool:
    name: Default
  steps:
  - checkout: self
    clean: true
    fetchTags: false

  - task: Docker@2
    displayName: Run Docker container
    continueOnError: true
    inputs:
      containerRegistry: '139f9c5c-cd33-4df3-baf9-e41824683734'
      repository: '$(imageName)'
      command: 'run'
      arguments: '-d -p 8080:80 $(fullImageName)'

  - script: echo "Pipeline data: $(BuildParameters.addPipelineData)"
    displayName: 'Display Pipeline Data'
    condition: eq(variables['BuildParameters.addPipelineData'], 'true')

  - script: echo "Base image data: $(BuildParameters.addBaseImageData)"
    displayName: 'Display Base Image Data'
    condition: eq(variables['BuildParameters.addBaseImageData'], 'true')
